# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build-and-test:

    # Specify the Xcode version to use
    macos:
      xcode: "9.2.0"
    shell: /bin/bash --login -eo pipefail
    working_directory: /Users/distiller/project
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      XCODE_SCHEME: DoneList
      XCODE_WORKSPACE: DoneList.xcworkspace
      FL_OUTPUT_DIR: /Users/distiller/project/output

    steps:
      - checkout

      # - run:
      #     name: Fetch CocoaPods Specs
      #     command: |
      #       curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf

      # Install CocoaPods
      # - run:
      #     name: Install CocoaPods
      #     command: pod install

      # Run bundler
      # Load installed gems from cache if possible, bundle install then save cache 
      # Multiple caches are used to increase the chance of a cache hit
      
      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache
            
      - run: bundle install --path vendor/bundle
      
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle


      # Build the app and run tests
      - run:
          name: Build and run tests
          command: bundle exec fastlane test

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
      - run:
          command: cp $FL_OUTPUT_DIR/scan/report.junit $FL_OUTPUT_DIR/scan/report.xml
          when: always
      - store_test_results:
          path: /Users/distiller/project/output/scan
      - store_artifacts:
          path: /Users/distiller/project/output


workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test
